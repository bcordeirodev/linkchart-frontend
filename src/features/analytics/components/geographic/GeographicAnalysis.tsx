import { Box } from '@mui/material';
import { useGeographicData } from '../../hooks/useGeographicData';
import { GeographicChart } from './GeographicChart';
import { GeographicInsights } from './GeographicInsights';
import { GeographicMetrics } from './GeographicMetrics';
import TabDescription from '@/shared/ui/base/TabDescription';
import AnalyticsStateManager from '@/shared/ui/base/AnalyticsStateManager';

interface GeographicAnalysisProps {
	linkId?: string;
	globalMode?: boolean;
	title?: string;
	enableRealtime?: boolean;
	minClicks?: number;
}

/**
 * 游깴 GEOGRAPHIC ANALYSIS - COMPONENTE INTEGRADO
 *
 * @description
 * Componente principal do m칩dulo geogr치fico que usa o hook dedicado
 * useGeographicData para buscar e gerenciar dados geogr치ficos.
 *
 * @features
 * - Hook espec칤fico useGeographicData
 * - Suporte a modo global e link espec칤fico
 * - Realtime opcional
 * - Filtros por cliques m칤nimos
 * - Estados de loading e error integrados
 *
 * @usage
 * ```tsx
 * // Modo global
 * <GeographicAnalysis
 *   globalMode={true}
 *   enableRealtime={true}
 * />
 *
 * // Link espec칤fico
 * <GeographicAnalysis
 *   linkId="123"
 *   minClicks={5}
 * />
 * ```
 */
export function GeographicAnalysis({
	linkId,
	globalMode = false,
	title = 'An치lise Geogr치fica',
	enableRealtime = false,
	minClicks = 1
}: GeographicAnalysisProps) {
	// Usar hook espec칤fico para dados geogr치ficos
	const { data, stats, loading, error, refresh, isRealtime } = useGeographicData({
		linkId,
		globalMode,
		enableRealtime,
		minClicks,
		includeHeatmap: true,
		refreshInterval: 30000
	});

	return (
		<Box>
			{/* 1. BOX DE APRESENTA칂츾O DO M칍DULO - SEMPRE VIS칈VEL */}
			<Box sx={{ mb: 3 }}>
				<TabDescription
					icon="游깴"
					title={title}
					description="Distribui칞칚o global dos seus cliques com insights detalhados por pa칤ses, estados e cidades."
					highlight={`${stats?.totalCountries || 0} pa칤ses alcan칞ados`}
					metadata={isRealtime ? 'Tempo Real' : undefined}
				/>
			</Box>

			{/* 2. CONTE칔DO COM LOADER */}
			<AnalyticsStateManager
				loading={loading}
				error={error}
				hasData={!!data}
				onRetry={refresh}
				loadingMessage="Carregando dados geogr치ficos..."
				emptyMessage="Dados geogr치ficos indispon칤veis"
				minHeight={300}
			>
				<Box>
					{/* M칄TRICAS */}
					<Box sx={{ mb: 3 }}>
						<GeographicMetrics
							data={data}
							stats={stats}
							showTitle={true}
							title="游깴 M칠tricas Geogr치ficas"
						/>
					</Box>

					{/* RESTANTE DO CONTE칔DO */}
					<Box>
						{/* Gr치ficos Geogr치ficos */}
						<GeographicChart
							countries={data?.top_countries || []}
							states={data?.top_states || []}
							cities={data?.top_cities || []}
							totalClicks={stats?.topCountryClicks || 0}
						/>

						{/* Insights Geogr치ficos */}
						<Box>
							<GeographicInsights
								data={data?.heatmap_data || []}
								countries={data?.top_countries || []}
								states={data?.top_states || []}
								cities={data?.top_cities || []}
							/>
						</Box>
					</Box>
				</Box>
			</AnalyticsStateManager>
		</Box>
	);
}

export default GeographicAnalysis;
