/**
 * @fileoverview Componente principal de an√°lise de heatmap
 * @author Link Chart Team
 * @version 2.0.0
 */

import { Box } from '@mui/material';
import { RealTimeHeatmapChart } from './RealTimeHeatmapChart';
import { HeatmapMetrics } from './HeatmapMetrics';
import { HeatmapStats } from './HeatmapStats';
import { useHeatmapData } from '@/features/analytics/hooks/useHeatmapData';
import AnalyticsStateManager from '@/shared/ui/base/AnalyticsStateManager';
import TabDescription from '@/shared/ui/base/TabDescription';

// Props locais do componente
interface HeatmapAnalysisProps {
	linkId?: string;
	globalMode?: boolean;
	title?: string;
	enableRealtime?: boolean;
	minClicks?: number;
}

/**
 * Componente de an√°lise de heatmap unificado
 *
 * @description
 * Este componente fornece uma interface completa para visualiza√ß√£o de heatmap:
 * - M√©tricas agregadas (total de cliques, pa√≠ses, cidades)
 * - Mapa interativo em tempo real
 * - Suporte para modo global e espec√≠fico por link
 * - Estados de loading e erro
 *
 * @example
 * ```tsx
 * // Modo global (todos os links)
 * <HeatmapAnalysis globalMode={true} />
 *
 * // Link espec√≠fico
 * <HeatmapAnalysis linkId="123" />
 * ```
 */
export function HeatmapAnalysis({
	linkId,
	globalMode = false,
	title = 'An√°lise de Heatmap',
	enableRealtime = true,
	minClicks = 1
}: HeatmapAnalysisProps) {
	// Determinar modo de opera√ß√£o
	const isGlobalMode = globalMode || !linkId;

	// Hook para gerenciar dados do heatmap
	const {
		stats,
		data: heatmapData,
		loading,
		error,
		refresh,
		lastUpdate
	} = useHeatmapData({
		linkId: isGlobalMode ? undefined : linkId,
		globalMode: isGlobalMode,
		enableRealtime,
		refreshInterval: 30000,
		minClicks
	});

	return (
		<Box>
			{/* 1. BOX DE APRESENTA√á√ÉO DO M√ìDULO - SEMPRE VIS√çVEL */}
			<Box sx={{ mb: 3 }}>
				<TabDescription
					icon="üó∫Ô∏è"
					title={title}
					description="Visualiza√ß√£o geogr√°fica interativa dos cliques com densidade de calor, coordenadas precisas e informa√ß√µes detalhadas por localiza√ß√£o."
					highlight={`${stats?.totalPoints || 0} localiza√ß√µes mapeadas`}
					metadata={
						enableRealtime
							? 'Tempo Real'
							: lastUpdate
								? `Atualizado: ${lastUpdate.toLocaleTimeString()}`
								: undefined
					}
				/>
			</Box>

			{/* 2. CONTE√öDO COM LOADER */}
			<AnalyticsStateManager
				loading={loading}
				error={error}
				hasData={!!heatmapData?.length}
				onRetry={refresh}
				loadingMessage={
					isGlobalMode ? 'Agregando dados de todos os links...' : 'Carregando dados do heatmap...'
				}
				emptyMessage={
					isGlobalMode
						? 'N√£o h√° cliques registrados em nenhum dos seus links ativos ainda.'
						: 'Este link ainda n√£o recebeu cliques com dados geogr√°ficos.'
				}
				minHeight={400}
			>
				<Box>
					{/* M√âTRICAS */}
					<Box sx={{ mb: 3 }}>
						<HeatmapMetrics
							stats={stats}
							showTitle={true}
							title={isGlobalMode ? 'üåç M√©tricas Globais do Heatmap' : 'üìç M√©tricas do Heatmap'}
						/>

						{/* Estat√≠sticas Avan√ßadas */}
						<Box sx={{ mt: 3 }}>
							<HeatmapStats
								data={heatmapData || []}
								stats={stats || undefined}
								globalMode={isGlobalMode}
								showTitle={true}
								title="üìä Estat√≠sticas Detalhadas"
							/>
						</Box>
					</Box>

					{/* RESTANTE DO CONTE√öDO */}
					<Box>
						<RealTimeHeatmapChart
							data={heatmapData || []}
							stats={stats}
							loading={loading}
							error={error}
							onRefresh={refresh}
							height={700}
							title={
								isGlobalMode
									? 'Mapa de Calor Global - Todos os Links Ativos'
									: 'Mapa de Calor - Link Espec√≠fico'
							}
							showControls={true}
							showStats={false} // M√©tricas j√° s√£o mostradas acima
						/>
					</Box>
				</Box>
			</AnalyticsStateManager>
		</Box>
	);
}

export default HeatmapAnalysis;
