#!/bin/bash

# Script de Build para Produ√ß√£o
# Otimiza o build do Next.js para produ√ß√£o

set -e

echo "üöÄ Iniciando build de produ√ß√£o..."

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo "‚ùå Erro: package.json n√£o encontrado. Execute este script na raiz do projeto front-end."
    exit 1
fi

# Limpar builds anteriores
echo "üßπ Limpando builds anteriores..."
rm -rf .next
rm -rf out

# Instalar depend√™ncias se necess√°rio
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias..."
    npm install
fi

# Verificar vari√°veis de ambiente
echo "üîß Verificando configura√ß√µes de ambiente..."
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Copiando .env.example..."
    cp .env.example .env
    echo "üìù Configure as vari√°veis de ambiente no arquivo .env antes de fazer deploy."
fi

# Build de produ√ß√£o
echo "üî® Executando build de produ√ß√£o..."
NODE_ENV=production npm run build

# Verificar se o build foi bem-sucedido
if [ $? -eq 0 ]; then
    echo "‚úÖ Build conclu√≠do com sucesso!"
    
    # Estat√≠sticas do build
    echo "üìä Estat√≠sticas do build:"
    du -sh .next
    
    # Verificar se h√° warnings
    if grep -q "Warning" .next/build-manifest.json 2>/dev/null; then
        echo "‚ö†Ô∏è  Build conclu√≠do com warnings. Verifique os logs acima."
    else
        echo "üéâ Build limpo sem warnings!"
    fi
    
    # Sugest√µes para deploy
    echo ""
    echo "üöÄ Pr√≥ximos passos para deploy:"
    echo "1. Configure as vari√°veis de ambiente em produ√ß√£o"
    echo "2. Configure o servidor web (nginx, Apache, etc.)"
    echo "3. Configure SSL/TLS"
    echo "4. Configure monitoramento (Sentry, etc.)"
    echo "5. Configure CDN se necess√°rio"
    
else
    echo "‚ùå Build falhou!"
    exit 1
fi

echo "‚ú® Script conclu√≠do!"
