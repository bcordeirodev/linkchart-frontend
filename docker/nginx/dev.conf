# ===========================================
# NGINX DEVELOPMENT - LINKCHARTAPP FRONTEND
# ===========================================

server {
    listen 80;
    server_name localhost;
    
    # Logs
    access_log /var/log/nginx/dev_access.log;
    error_log /var/log/nginx/dev_error.log debug;

    # CORS simplificado para desenvolvimento
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Preview-Mode" always;

    # Proxy para Next.js (dev server)
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        
        # Hot reload support
        proxy_buffering off;
    }

    # API proxy para backend local
    location /api/ {
        # CORS para desenvolvimento
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Preview-Mode";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # Proxy para backend
        proxy_pass http://host.docker.internal/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 30s;
        proxy_connect_timeout 10s;
    }

    # Health check
    location /health {
        proxy_pass http://frontend:3000/health;
        access_log off;
    }

    # WebSocket support para hot reload
    location /_next/webpack-hmr {
        proxy_pass http://frontend:3000/_next/webpack-hmr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
