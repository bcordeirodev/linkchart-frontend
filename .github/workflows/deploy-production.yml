name: 🚀 Deploy Frontend to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  DEPLOY_HOST: 138.197.121.81
  PROJECT_PATH: /var/www/linkchartapp-frontend
  DOCKER_COMPOSE_FILE: docker/docker-compose.production.yml

jobs:
  deploy:
    name: 🏗️ Deploy Frontend to Production Server
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 20

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to Production Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ env.DEPLOY_HOST }}
        username: root
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        script: |
          echo "🚀 Iniciando deploy do frontend..."
          
          # Criar diretório se não existir
          mkdir -p ${{ env.PROJECT_PATH }}
          cd ${{ env.PROJECT_PATH }}
          
          # Fazer backup da versão atual (se existir)
          echo "💾 Fazendo backup da versão atual..."
          docker tag linkchartapp-frontend:latest linkchartapp-frontend:backup-$(date +%Y%m%d-%H%M%S) 2>/dev/null || echo "No previous version to backup"
          
          # Parar containers antigos
          echo "🛑 Parando containers antigos..."
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} down 2>/dev/null || echo "No containers to stop"
          
          # Build da aplicação
          echo "🏗️ Building aplicação..."
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} build --no-cache
          
          # Iniciar serviços
          echo "🚀 Iniciando serviços..."
          docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d
          
          # Aguardar inicialização
          echo "⏳ Aguardando inicialização..."
          sleep 30
          
          # Verificar se está funcionando
          echo "🔍 Verificando se está funcionando..."
          sleep 10
          for i in {1..6}; do
            if curl -f http://localhost:3000/ 2>/dev/null || curl -f http://localhost:3000/health 2>/dev/null; then
              echo "✅ Aplicação funcionando corretamente"
              break
            else
              echo "⏳ Tentativa $i/6 - Aguardando aplicação inicializar..."
              sleep 10
            fi
          done
          
          # Verificação final
          if ! curl -f http://localhost:3000/ 2>/dev/null && ! curl -f http://localhost:3000/health 2>/dev/null; then
            echo "❌ Aplicação não está funcionando após 60s"
            docker logs linkchartapp-frontend
            exit 1
          fi
          
          # Limpar imagens antigas
          echo "🧹 Limpando imagens antigas..."
          docker image prune -f
          docker images | grep linkchartapp-frontend | tail -n +4 | awk '{print $3}' | xargs -r docker rmi 2>/dev/null || echo "No old images to clean"
          
          echo "✅ Deploy completed successfully!"
