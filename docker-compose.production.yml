# ===========================================
# DOCKER COMPOSE - PRODUÇÃO FRONTEND
# ===========================================

version: '3.8'

services:
  # Frontend Next.js
  frontend:
    image: linkchartapp-frontend:latest
    container_name: linkchartapp-frontend
    restart: unless-stopped
    
    # Portas
    ports:
      - "3000:3000"
    
    # Variáveis de ambiente
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Recursos
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    # Logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Rede
    networks:
      - linkchartapp-network

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: linkchartapp-nginx
    restart: unless-stopped
    
    # Portas
    ports:
      - "80:80"
      - "443:443"
    
    # Volumes
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
    
    # Dependências
    depends_on:
      frontend:
        condition: service_healthy
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    # Logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Rede
    networks:
      - linkchartapp-network

# Redes
networks:
  linkchartapp-network:
    driver: bridge
    name: linkchartapp-network

# Volumes (se necessário)
volumes:
  nginx-logs:
    driver: local
